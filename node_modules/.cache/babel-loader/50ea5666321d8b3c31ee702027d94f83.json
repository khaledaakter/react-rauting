{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\01-deafult-project\\\\programing-js\\\\Rjs-2\\\\react-rauting\\\\src\\\\component\\\\Questions\\\\Questions.js\";\nimport React from 'react';\nimport './Questions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Questions = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"QuestionsItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"QuestionsHeader\",\n          children: \"What is Context API?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"QuestionsBody\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"The React Context API is a way for a React app to effectively produce global variables that can be passed around. \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"QuestionsItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"QuestionsHeader\",\n          children: \"Inline vs Inline-Block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"QuestionsBody\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"QuestionsBodyList\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Inline :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Displays an element as an inline element. Any height and width properties will have no effect.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"The element doesn\\u2019t start on a new line and only occupy just the width it requires. You can\\u2019t set the width or height.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"An inline element does not start on a new line.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"An inline element only takes up as much width as necessary.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"QuestionsBodyList\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Inline Block :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Displays an element as an inline-level block container. You CAN set height and width values.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"It\\u2019s formatted just like the inline element, where it doesn\\u2019t start on a new line. BUT, you can set width and height values.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"An Inline Block element does not start on a new line.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"An Inline Block element only takes up as much width as necessary. and it's blocked the area.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["C:/laragon/www/01-deafult-project/programing-js/Rjs-2/react-rauting/src/component/Questions/Questions.js"],"names":["React","Questions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,sBACI;AAAA,2BACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,mBAAd;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AAAI,YAAA,SAAS,EAAC,mBAAd;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CAhCD;;KAAMA,S;AAkCN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport './Questions.css';\r\n\r\nconst Questions = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className=\"QuestionsItem\">\r\n                    <div className=\"QuestionsHeader\">What is Context API?</div>\r\n                    <div className=\"QuestionsBody\">\r\n                        <p>The React Context API is a way for a React app to effectively produce global variables that can be passed around. </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"QuestionsItem\">\r\n                    <div className=\"QuestionsHeader\">Inline vs Inline-Block</div>\r\n                    <div className=\"QuestionsBody\">\r\n                        <ul className='QuestionsBodyList'>\r\n                            <h3>Inline :</h3>\r\n                            <li>Displays an element as an inline element. Any height and width properties will have no effect.</li>\r\n                            <li>The element doesn’t start on a new line and only occupy just the width it requires. You can’t set the width or height.</li>\r\n                            <li>An inline element does not start on a new line.</li>\r\n                            <li>An inline element only takes up as much width as necessary.</li>\r\n                        </ul>\r\n                        <ul className='QuestionsBodyList'>\r\n                            <h3>Inline Block :</h3>\r\n                            <li>Displays an element as an inline-level block container. You CAN set height and width values.</li>\r\n                            <li>It’s formatted just like the inline element, where it doesn’t start on a new line. BUT, you can set width and height values.</li>\r\n                            <li>An Inline Block element does not start on a new line.</li>\r\n                            <li>An Inline Block element only takes up as much width as necessary. and it's blocked the area.</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Questions;"]},"metadata":{},"sourceType":"module"}